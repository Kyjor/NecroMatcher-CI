name: CI

on:
  push:

  workflow_dispatch:

  repository_dispatch:
    types: [trigger-ci]
  
jobs:
  test:
    name: Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        version:
          - '1'
        os:
          - ubuntu-latest
          - macOS-latest
          - windows-latest
        arch:
          - x64
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          ssh-key: ${{ secrets.PRIVATE_SSH_KEY }}
          repository: Kyjor/gmtk-2024
      - name: Setup Ubuntu Display (if applicable)
        run: sudo apt-get install xvfb && Xvfb :99 &
        if: matrix.os == 'ubuntu-latest'
      - name: Setup Julia
        uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - name: Add JulGame.jl Dependency
        working-directory: ./Battler
        run: julia -e 'using Pkg; Pkg.activate("."); Pkg.add(PackageSpec(url="https://github.com/Kyjor/JulGame.jl", rev="develop")); Pkg.add(PackageSpec(url="https://github.com/Kyjor/PackageCompiler.jl", rev="master"))'
      - name: Build Julia Package
        working-directory: ./Battler
        run: julia -e 'using Pkg; Pkg.activate("."); Pkg.build()'
      - name: Run Tests
        working-directory: ./Battler
        run: julia -e 'using Pkg; Pkg.activate("."); Pkg.test()'
      - name: Copy Config File to Build (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: cp ./Battler/config.julgame ./Build
      - name: Copy Config File to Build (Mac)
        if: matrix.os == 'macOS-latest'
        run: cp ./Battler/config.julgame ./Build
      - name: Copy Config File to Build (Windows)
        if: matrix.os == 'windows-latest'
        run: copy Battler\config.julgame Build\config.julgame
      - name: Zip Build Folder (Mac)
        if: matrix.os == 'macOS-latest'
        run: zip -r Build.zip Build
      - name: Upload Artifact (Linux)
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v4
        with:
            name: NecroMatcher-Linux
            path: ./Build
      - name: Upload Artifact (Mac)
        if: matrix.os == 'macOS-latest'
        uses: actions/upload-artifact@v4
        with:
            name: NecroMatcher-Mac
            path: ./Build
      - name: Upload Artifact (Windows)
        if: matrix.os == 'windows-latest' && github.ref_name == 'main'
        uses: actions/upload-artifact@v4
        with:
            name: NecroMatcher-Windows
            path: ./Build
      # - name: Deploy to Steam (Linux)
      #   if: matrix.os == 'ubuntu-latest'
      #   uses: game-ci/steam-deploy@v3
      #   with:
      #     username: ${{ secrets.STEAM_USERNAME }}
      #     configVdf: ${{ secrets.STEAM_CONFIG_VDF }}
      #     appId: 1410040
      #     buildDescription: v0.1.0
      #     rootPath: ./
      #     depot3Path: Build
      #     releaseBranch: testing
